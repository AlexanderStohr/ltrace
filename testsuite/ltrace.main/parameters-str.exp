# This file is part of ltrace.
# Copyright (C) 2014 Petr Machata, Red Hat Inc.
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation; either version 2 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
# 02110-1301 USA

# Test for a number of ways that HFA can be passed.

ltraceMatch [ltraceLibTest {
   string[7] func_str7(string[7]);
   string[17] func_str17(string[17]);

   struct(string(array(char,7))) struct_func_str7(struct(string[7]));
   struct(string(array(char,8))) struct_func_str8(struct(string[8]));
   struct(string(array(char,9))) struct_func_str9(struct(string[9]));
   struct(string(array(char,16))) struct_func_str16(struct(string[16]));
   struct(string(array(char,17))) struct_func_str17(struct(string[17]));

   struct(struct(string(array(char,16))),int) struct_func_str16_i(string[16]);

   struct(struct(string(array(char,17))),int) struct_func_str17_i(string[17]);
   struct(int,struct(string(array(char,17)))) struct_func_str17_k(string[17]);

} {
   char *func_str7(char str[7] );
   char *func_str7_b(char str[17] );

   struct struct_str	  { char *str   ; };
   struct struct_size7    { char str[7] ; };
   struct struct_size8    { char str[8] ; };
   struct struct_size9    { char str[9] ; };
   struct struct_size16   { char str[16] ; };
   struct struct_size17   { char str[17] ; };
   struct struct_size16_i { char str[16] ; int i;};
   struct struct_size17_i { char str[17] ; int i;};
   struct struct_size17_k { int i; char str[17];};

   struct struct_size7    struct_func_str7(struct struct_str a);
   struct struct_size8    struct_func_str8(struct struct_str a);
   struct struct_size9    struct_func_str9(struct struct_str a);
   struct struct_size16   struct_func_str16(struct struct_str a);
   struct struct_size17   struct_func_str17(struct struct_str a);
   struct struct_size16_i struct_func_str16_i(char a[16]);
   struct struct_size17_i struct_func_str17_i(char a[17]);
   struct struct_size17_k struct_func_str17_k(char a[17]);

} {
    char *func_str7(char str[7])
        { return "ABCDEFG" ; }
    char *func_str17(char str[17])
        { return "ABCDEFGIJKabcdefg" ; }

    struct struct_size7 struct_func_str7(struct struct_str a)
        { return (struct struct_size7) { "ABCDEFG"} ; }

    struct struct_size8 struct_func_str8(struct struct_str a)
        { return (struct struct_size8) { "ABCDEFG8"} ; }

    struct struct_size9 struct_func_str9(struct struct_str a)
        { return (struct struct_size9) {"ABCDEFG12"} ; }

    struct struct_size16 struct_func_str16(struct struct_str a)
        { return (struct struct_size16) {"a2b4c6d8eafc1e30"} ; }

    struct struct_size17 struct_func_str17(struct struct_str a)
        { return (struct struct_size17) {"a2b4c6d8eafc1e305"} ; }

    struct struct_size16_i struct_func_str16_i(char a[16] )
        { return (struct struct_size16_i) {"a2b4c6d8eafc1e30",256} ; }

    struct struct_size17_i struct_func_str17_i(char a[17] )
        { return (struct struct_size17_i) {"a2b4c6d8eafc1e305",512} ; }

    struct struct_size17_k struct_func_str17_k(char a[17] )
        { return (struct struct_size17_k) {768,"a2b4c6d8eafc1e305"} ; }

} {
        func_str7("1234567");
        func_str17("123456789abcdef01");

        struct_func_str7((struct struct_str){ "1234567" });
        struct_func_str8((struct struct_str){ "12345678" });
        struct_func_str9((struct struct_str){ "1234567ab" });
        struct_func_str16((struct struct_str){ "123456789abcdef0" });
        struct_func_str17((struct struct_str){ "123456789abcdef01" });

        struct_func_str16_i("123456789abcdef0");
        struct_func_str17_i("123456789abcdef01");
        struct_func_str17_k("12");
}] {
    { {func_str7\("1234567"\).*= "ABCDEFG"} == 1 }
    { {func_str17\("123456789abcdef01"\).*= "ABCDEFGIJKabcdefg"} == 1 }

    { {struct_func_str7\({ "1234567" }\).*= { "ABCDEFG" }} == 1 }
    { {struct_func_str8\({ "12345678" }\).*= { "ABCDEFG8" }} == 1 }
    { {struct_func_str9\({ "1234567ab" }\).*= { "ABCDEFG12" }} == 1 }
    { {struct_func_str16\({ "123456789abcdef0" }\).*= { "a2b4c6d8eafc1e30" }} == 1 }
    { {struct_func_str17\({ "123456789abcdef01" }\).*= { "a2b4c6d8eafc1e305" }} == 1 }
    { {struct_func_str16_i\("123456789abcdef0"\).*= { { "a2b4c6d8eafc1e30" }, 256 }} == 1 }
    { {struct_func_str17_i\("123456789abcdef01"\).*= { { "a2b4c6d8eafc1e305" }, 512 }} == 1 }
    { {struct_func_str17_k\("12"\).*= { 768, { "a2b4c6d8eafc1e305" } }} == 1 }

}

